@page
@model IndexModel
@{
    ViewData["Title"] = "Home";
}


<div class="text-center">

    <div class="container p-5 my-5 bg-dark text-white rounded-1">
        <h1 Style="color:white" class="display-4">Welcome to Our Logistics Web App</h1>
        <p Style="color:#78c2ad"> 
            <strong> Check Out "Start Here" for more Project and Team Information </strong> </p>
    </div> 
 
<a href="/Welcome" class="btn btn-primary">Start Here</a>
<a href="/Learn" class="btn btn-info">Learn Logistics</a>
<a href="/Privacy" class="btn btn-dark">Check out Our Privacy Policy</a>

<p>
</p>

<div class="newtable">
        <table id="TableOfContents">
            <tr>
                <th>
                    How Can We Help You Today?
                </th>
            </tr>
            <tr>
                <td><a href="/ShipmentCrud">Shipping Information</a></td>
            </tr>
            <tr>
                <td><a href="/TrackingCrud">Track Packages</a></td>
            </tr>
        </table>   
    </div>

<p> 

</p>

<!--Implement for final project (adds visual appeal) -->
<div class="accordion" id="accordionExample">
  <div class="accordion-item">
    <h2 class="accordion-header" id="headingOne">
      <button class="accordion-button" type="button" data-bs-toggle="collapse" data-bs-target="#collapseOne" aria-expanded="true" aria-controls="collapseOne">
        Accordion Item #1
      </button>
    </h2>
    <div id="collapseOne" class="accordion-collapse collapse show" aria-labelledby="headingOne" data-bs-parent="#accordionExample">
      <div class="accordion-body">
        <strong>This is the first item's accordion body.</strong> It is shown by default, until the collapse plugin adds the appropriate classes that we use to style each element. These classes control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the <code>.accordion-body</code>, though the transition does limit overflow.
      </div>
    </div>
  </div>
  <div class="accordion-item">
    <h2 class="accordion-header" id="headingTwo">
      <button class="accordion-button collapsed" type="button" data-bs-toggle="collapse" data-bs-target="#collapseTwo" aria-expanded="false" aria-controls="collapseTwo">
        Accordion Item #2
      </button>
    </h2>
    <div id="collapseTwo" class="accordion-collapse collapse" aria-labelledby="headingTwo" data-bs-parent="#accordionExample">
      <div class="accordion-body">
        <strong>This is the second item's accordion body.</strong> It is hidden by default, until the collapse plugin adds the appropriate classes that we use to style each element. These classes control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the <code>.accordion-body</code>, though the transition does limit overflow.
      </div>
    </div>
  </div>
  <div class="accordion-item">
    <h2 class="accordion-header" id="headingThree">
      <button class="accordion-button collapsed" type="button" data-bs-toggle="collapse" data-bs-target="#collapseThree" aria-expanded="false" aria-controls="collapseThree">
        Accordion Item #3
      </button>
    </h2>
    <div id="collapseThree" class="accordion-collapse collapse" aria-labelledby="headingThree" data-bs-parent="#accordionExample">
      <div class="accordion-body">
        <strong>This is the third item's accordion body.</strong> It is hidden by default, until the collapse plugin adds the appropriate classes that we use to style each element. These classes control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the <code>.accordion-body</code>, though the transition does limit overflow.
      </div>
    </div>
  </div>
</div>



   
<p> 
</p>
<div>
<a href="https://img.rawpixel.com/s3fs-private/rawpixel_images/website_content/v148-n-poyd-aum-01-logistics_4.jpg?w=800&dpr=1&fit=default&crop=default&auto=format&fm=pjpg&q=75&vib=3&con=3&usm=15&bg=F4F4F3&ixlib=js-2.2.1&s=b7ba3c6e82abeaabe1f3a08818ca0a59">
    <img src="https://img.rawpixel.com/s3fs-private/rawpixel_images/website_content/v148-n-poyd-aum-01-logistics_4.jpg?w=800&dpr=1&fit=default&crop=default&auto=format&fm=pjpg&q=75&vib=3&con=3&usm=15&bg=F4F4F3&ixlib=js-2.2.1&s=b7ba3c6e82abeaabe1f3a08818ca0a59"
         alt="Shipping containers on trucks, boats, and scaffolding" id="scontainers"
         style="width: 150px; height: 150px;" />
</a>


<p>Learn about <a href="https://learn.microsoft.com/aspnet/core">building Web apps with ASP.NET Core</a>.</p>
</div>

